name: Milestone

on:
  schedule:
    # switch these on November 2 at 2:00 am
    - cron: "30 3 * * *"   # 3:30 UTC == 11:30 PM New York (DST)
    # - cron: "30 4 * * *"   # 4:30 UTC == 11:30 PM New York (Standard Time)
  workflow_dispatch:

jobs:
  milestone:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Sync epic/story fields
        env:
          GITHUB_TOKEN: ${{ secrets.CAPPING_PAT }}
        run: |
          set -eo pipefail

          ISSUES=$(gh api graphql --paginate -f query='
          query {
            repository(owner:"CFdefense", name:"Capping2025"){
              issues(first:100, states:OPEN){
                pageInfo {
                  endCursor
                  startCursor
                  hasNextPage
                  hasPreviousPage
                }
                nodes {
                  id
                  milestone { id }
                  projectV2(number:2) { id }
                  projectItems(first:1){
                    nodes{
                      id
                      fieldValues(first:10){
                        nodes{
                          ... on ProjectV2ItemFieldNumberValue {
                            id
                            number
                            field { ... on ProjectV2Field { name } }
                          }
                          ... on ProjectV2ItemFieldSingleSelectValue {
                            id
                            name
                            field { ... on ProjectV2Field { name } }
                          }
                        }
                      }
                    }
                  }
                  parent {
                    id
                    milestone { id }
                  }
                  subIssues(first:100) {
                    nodes {
                      id
                      projectItems(first:1){
                        nodes{
                          fieldValues(first:10){
                            nodes{
                              ... on ProjectV2ItemFieldNumberValue {
                                number
                                field { ... on ProjectV2Field { name } }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }' | jq '{
            projectId: (.data.repository.issues.nodes[0].projectV2.id // "null"),
            issues: [
              .data.repository.issues.nodes[] | {
                issueId: .id,
                milestoneId: .milestone.id,
                itemId: (.projectItems.nodes[0].id // null),
                type: (
                  .projectItems.nodes[0].fieldValues.nodes[]
                  | select(.field.name=="Type")
                  | .name // null
                ),
                days: (
                  (.projectItems.nodes[0].fieldValues.nodes[]
                   | select(.field.name=="Days")
                   | { id: (.id // null), number: (.number // 0) })
                  // { id:null, number:0 }
                ),
                parent: (
                  if .parent != null then {
                    id: .parent.id,
                    milestoneId: .parent.milestone.id
                  } else null end
                ),
                subDays: (
                  [(.subIssues.nodes[]
                    | .projectItems.nodes[0].fieldValues.nodes[]
                    | select(.field.name=="Days")
                    | .number // 0)]
                  | add // 0
                ),
              }
            ]
          }')

          PROJECT_ID=$(echo "$ISSUES" | jq -r '.projectId')

          echo "$ISSUES" | jq -c '.issues[]' | while read -r row; do
            TYPE=$(echo "$row" | jq -r '.type')
            ITEM_ID=$(echo "$row" | jq -r '.itemId')

            if [ "$TYPE" = "Story" ]; then
              MILESTONE_ID=$(echo "$row" | jq -r '.milestoneId')
              PARENT_ID=$(echo "$row" | jq -r '.parent.id')
              PARENT_MILESTONE_ID=$(echo "$row" | jq -r '.parent.milestoneId')
              ISSUE_ID=$(echo "$row" | jq -r '.issueId')

              if [ -n "$PARENT_MILESTONE_ID" ] && [ "$MILESTONE_ID" != "$PARENT_MILESTONE_ID" ]; then
                gh api graphql -f query='
                mutation($sId:ID!, $mId:ID!) {
                  updateIssue(input:{
                    clientMutationId:"milestone_gh_action"
                    id:$sId
                    milestoneId:$mId
                  }) {clientMutationId}
                }' -F sId=$ISSUE_ID -F mId=$PARENT_MILESTONE_ID
              fi
            elif [ "$TYPE" = "Epic" ]; then
              DAYS=$(echo "$row" | jq -r '.days.number')
              DAYS_ID=$(echo "$row" | jq -r '.days.id')
              SUB_DAYS=$(echo "$row" | jq -r '.subDays')

              if [ "$DAYS" != "$SUB_DAYS" ]; then
                gh api graphql -f query='
                mutation($fId:ID!, $iId:ID!, $pId:ID!, $val:Float!) {
                  updateProjectV2ItemFieldValue(input:{
                    clientMutationId:"milestone_gh_action"
                    fieldId:$fId
                    itemId:$iId
                    projectId:$pId
                    value:{number:$val}
                  }) {clientMutationId}
                }' -F fId=$DAYS_ID -F iId=$ITEM_ID -F pId=$PROJECT_ID -F val=$SUB_DAYS
              fi
            fi
          done